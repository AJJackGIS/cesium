/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
.🥝-button {
  --✨color--default: var(--stratakit-color-text-neutral-primary);
  --✨gap: 4px;
  --✨height: 1.5rem;
  --✨padding-inline: 12px;
  --✨padding-block: 4px;

  --✨shadow-border: 0px 0px 0px 1px var(--🥝button-border-color) inset;

  --✨glow--bg-hover: var(--stratakit-color-glow-hue)
    var(--stratakit-color-bg-glow-base-hover-\%);
  --✨glow--bg-press: var(--stratakit-color-glow-hue)
    var(--stratakit-color-bg-glow-base-pressed-\%);

  --✨border--active: var(--stratakit-color-border-accent-strong);
  --✨bg--active: var(--stratakit-color-bg-glow-on-surface-accent-pressed);

  /* #region Variant: solid */
  --✨bg--solid-neutral-default: var(--stratakit-color-bg-neutral-base);
  --✨bg--solid-accent-default: var(--stratakit-color-bg-accent-base);
  --✨bg--solid-hover: color-mix(
    in oklch,
    var(--🥝button-bg--solid-default) 100%,
    var(--✨glow--bg-hover)
  );
  --✨bg--solid-pressed: color-mix(
    in oklch,
    var(--🥝button-bg--solid-default) 100%,
    var(--✨glow--bg-press)
  );
  --✨bg--solid-disabled: var(--stratakit-color-bg-glow-on-surface-disabled);

  --✨shadow--solid:
    var(--stratakit-shadow-button-base-inset), var(--✨shadow-border),
    var(--stratakit-shadow-button-base-drop);

  --✨border--solid-neutral-default: var(--stratakit-color-border-shadow-base);
  --✨border--solid-neutral-hover: color-mix(
    in oklch,
    var(--✨border--solid-neutral-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-border-glow-base-hover-\%)
  );
  --✨border--solid-neutral-pressed: color-mix(
    in oklch,
    var(--✨border--solid-neutral-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-border-glow-base-pressed-\%)
  );
  --✨border--solid-neutral-disabled: transparent;

  --✨border--solid-accent-default: var(--stratakit-color-border-shadow-strong);
  --✨border--solid-accent-hover: color-mix(
    in oklch,
    var(--✨border--solid-accent-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-border-glow-strong-hover-\%)
  );
  --✨border--solid-accent-pressed: color-mix(
    in oklch,
    var(--✨border--solid-accent-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-border-glow-strong-pressed-\%)
  );
  --✨border--solid-accent-disabled: transparent;
  /* #endregion */

  /* #region Variant: outline */
  --✨bg--outline-default: transparent;
  --✨bg--outline-hover: color-mix(
    in oklch,
    var(--✨bg--outline-default) 100%,
    var(--✨glow--bg-hover)
  );
  --✨bg--outline-pressed: color-mix(
    in oklch,
    var(--✨bg--outline-default) 100%,
    var(--✨glow--bg-press)
  );
  --✨bg--outline-disabled: transparent;
  --✨border--outline-default: var(--stratakit-color-border-neutral-base);
  --✨border--outline-hover: color-mix(
    in oklch,
    var(--✨border--outline-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-border-glow-base-hover-\%)
  );
  --✨border--outline-pressed: color-mix(
    in oklch,
    var(--✨border--outline-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-border-glow-base-pressed-\%)
  );
  --✨border--outline-disabled: var(
    --stratakit-color-border-glow-on-surface-disabled
  );

  --✨bg--outline-accent-default: transparent;
  --✨bg--outline-accent-hover: var(
    --stratakit-color-bg-glow-on-surface-accent-hover
  );
  --✨bg--outline-accent-pressed: var(
    --stratakit-color-bg-glow-on-surface-accent-pressed
  );
  --✨bg--outline-accent-disabled: transparent;

  --✨color--outline-accent-default: var(--stratakit-color-text-accent-strong);
  --✨color--outline-accent-hover: color-mix(
    in oklch,
    var(--✨color--outline-accent-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-text-glow-strong-hover-\%)
  );
  --✨color--outline-accent-pressed: color-mix(
    in oklch,
    var(--✨color--outline-accent-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-text-glow-strong-pressed-\%)
  );

  --✨icon--outline-accent-default: var(--stratakit-color-icon-accent-strong);
  --✨icon--outline-accent-hover: color-mix(
    in oklch,
    var(--✨icon--outline-accent-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-icon-glow-strong-hover-\%)
  );
  --✨icon--outline-accent-pressed: color-mix(
    in oklch,
    var(--✨icon--outline-accent-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-icon-glow-strong-pressed-\%)
  );

  --✨border--outline-accent-default: var(--stratakit-color-border-accent-base);
  --✨border--outline-accent-hover: color-mix(
    in oklch,
    var(--✨border--outline-accent-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-border-glow-strong-hover-\%)
  );
  --✨border--outline-accent-pressed: color-mix(
    in oklch,
    var(--✨border--outline-accent-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-border-glow-strong-pressed-\%)
  );
  --✨border--outline-accent-disabled: var(
    --stratakit-color-border-glow-on-surface-disabled
  );
  /* #endregion */

  /* #region Variant: ghost */
  --✨bg--ghost-default: transparent;
  --✨bg--ghost-hover: color-mix(
    in oklch,
    var(--✨bg--ghost-default) 100%,
    var(--✨glow--bg-hover)
  );
  --✨bg--ghost-pressed: color-mix(
    in oklch,
    var(--✨bg--ghost-default) 100%,
    var(--✨glow--bg-press)
  );
  --✨bg--ghost-disabled: transparent;

  --✨bg--ghost-accent-default: transparent;
  --✨bg--ghost-accent-hover: var(
    --stratakit-color-bg-glow-on-surface-accent-hover
  );
  --✨bg--ghost-accent-pressed: var(
    --stratakit-color-bg-glow-on-surface-accent-pressed
  );
  --✨bg--ghost-accent-disabled: transparent;

  --✨color--ghost-accent-default: var(--stratakit-color-text-accent-strong);
  --✨color--ghost-accent-hover: color-mix(
    in oklch,
    var(--✨color--ghost-accent-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-text-glow-strong-hover-\%)
  );
  --✨color--ghost-accent-pressed: color-mix(
    in oklch,
    var(--✨color--ghost-accent-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-text-glow-strong-pressed-\%)
  );
  --✨icon--ghost-accent-default: var(--stratakit-color-icon-accent-strong);
  --✨icon--ghost-accent-hover: color-mix(
    in oklch,
    var(--✨icon--ghost-accent-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-icon-glow-strong-hover-\%)
  );
  --✨icon--ghost-accent-pressed: color-mix(
    in oklch,
    var(--✨icon--ghost-accent-default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-icon-glow-strong-pressed-\%)
  );
  /* #endregion */

  @layer base {
    text-decoration: none;
    line-height: 1.2;
    user-select: none;
    cursor: pointer;
    font-size: var(--stratakit-font-size-12);
    font-weight: 500;
    border: none;
    position: relative;

    display: inline-flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    gap: var(--✨gap);

    min-block-size: var(--✨height);
    border-radius: 4px;
    padding-inline: var(--🥝button-padding-inline, var(--✨padding-inline));
    padding-block: var(--✨padding-block);
    --🥝ghost-inline-offset: var(--✨padding-inline);
    --🥝ghost-block-offset: var(--✨padding-block);

    background-color: var(--🥝button-background-color);
    box-shadow: var(--✨shadow-border);
    color: var(--🥝button-color, var(--✨color--default));
    transition: background-color 150ms ease-out;
    -webkit-tap-highlight-color: var(
      --stratakit-color-bg-glow-on-surface-neutral-pressed
    );
    --🥝icon-color: var(
        --🌀button-state--default,
        var(--stratakit-color-icon-neutral-base)
      )
      var(--🌀button-state--hover, var(--stratakit-color-icon-neutral-hover))
      var(--🌀button-state--pressed, var(--stratakit-color-icon-neutral-hover))
      var(--🌀button-state--active, var(--stratakit-color-icon-accent-strong));

    @media (forced-colors: active) {
      background-color: ButtonFace;
      border: 1px solid ButtonBorder;
      color: ButtonText;
    }
  }

  @layer modifiers {
    &:where([data-kiwi-variant="solid"]) {
      --🥝button-background-color: var(
          --🌀button-state--default,
          var(--🥝button-bg--solid-default)
        )
        var(--🌀button-state--hover, var(--✨bg--solid-hover))
        var(--🌀button-state--pressed, var(--✨bg--solid-pressed))
        var(--🌀button-state--active, var(--✨bg--active))
        var(--🌀button-state--disabled, var(--✨bg--solid-disabled));
      box-shadow: var(--🌀button-state--default, var(--✨shadow--solid))
        var(--🌀button-state--hover, var(--✨shadow--solid))
        var(--🌀button-state--pressed, var(--✨shadow-border))
        var(--🌀button-state--active, var(--✨shadow-border))
        var(--🌀button-state--disabled, none);

      &:where([data-kiwi-tone="neutral"]) {
        --🥝button-bg--solid-default: var(--✨bg--solid-neutral-default);
        --🥝button-border-color: var(
            --🌀button-state--default,
            var(--✨border--solid-neutral-default)
          )
          var(--🌀button-state--hover, var(--✨border--solid-neutral-hover))
          var(--🌀button-state--pressed, var(--✨border--solid-neutral-pressed))
          var(
            --🌀button-state--disabled,
            var(--✨border--solid-neutral-disabled)
          );
      }

      &:where([data-kiwi-tone="accent"]) {
        --🥝button-bg--solid-default: var(--✨bg--solid-accent-default);
        --🥝button-border-color: var(
            --🌀button-state--default,
            var(--✨border--solid-accent-default)
          )
          var(--🌀button-state--hover, var(--✨border--solid-accent-hover))
          var(--🌀button-state--pressed, var(--✨border--solid-accent-pressed))
          var(
            --🌀button-state--disabled,
            var(--✨border--solid-accent-disabled)
          );

        --🥝button-color: var(--stratakit-color-text-neutral-emphasis);
        --🥝icon-color: var(--stratakit-color-icon-neutral-emphasis);
        -webkit-tap-highlight-color: var(
          --stratakit-color-bg-glow-on-surface-accent-pressed
        );
      }
    }

    &:where([data-kiwi-variant="outline"]) {
      &:where([data-kiwi-tone="neutral"]) {
        --🥝button-background-color: var(
            --🌀button-state--default,
            var(--✨bg--outline-default)
          )
          var(--🌀button-state--hover, var(--✨bg--outline-hover))
          var(--🌀button-state--pressed, var(--✨bg--outline-pressed))
          var(--🌀button-state--active, var(--✨bg--active))
          var(--🌀button-state--disabled, var(--✨bg--outline-disabled));
        --🥝button-border-color: var(
            --🌀button-state--default,
            var(--✨border--outline-default)
          )
          var(--🌀button-state--hover, var(--✨border--outline-hover))
          var(--🌀button-state--pressed, var(--✨border--outline-pressed))
          var(--🌀button-state--disabled, var(--✨border--outline-disabled));
      }

      &:where([data-kiwi-tone="accent"]) {
        --🥝button-background-color: var(
            --🌀button-state--default,
            var(--✨bg--outline-accent-default)
          )
          var(--🌀button-state--hover, var(--✨bg--outline-accent-hover))
          var(--🌀button-state--pressed, var(--✨bg--outline-accent-pressed))
          var(--🌀button-state--active, var(--✨bg--active))
          var(--🌀button-state--disabled, var(--✨bg--outline-accent-disabled));
        --🥝button-border-color: var(
            --🌀button-state--default,
            var(--✨border--outline-accent-default)
          )
          var(--🌀button-state--hover, var(--✨border--outline-accent-hover))
          var(
            --🌀button-state--pressed,
            var(--✨border--outline-accent-pressed)
          )
          var(
            --🌀button-state--disabled,
            var(--✨border--outline-accent-disabled)
          );
        --🥝button-color: var(
            --🌀button-state--default,
            var(--✨color--outline-accent-default)
          )
          var(--🌀button-state--hover, var(--✨color--outline-accent-hover))
          var(--🌀button-state--pressed, var(--✨color--outline-accent-pressed));
        --🥝icon-color: var(
            --🌀button-state--default,
            var(--✨icon--outline-accent-default)
          )
          var(--🌀button-state--hover, var(--✨icon--outline-accent-hover))
          var(--🌀button-state--pressed, var(--✨icon--outline-accent-pressed));
      }
    }

    &:where([data-kiwi-variant="ghost"]) {
      --🥝button-border-color: transparent;

      &:where([data-kiwi-tone="neutral"]) {
        --🥝button-background-color: var(
            --🌀button-state--default,
            var(--✨bg--ghost-default)
          )
          var(--🌀button-state--hover, var(--✨bg--ghost-hover))
          var(--🌀button-state--pressed, var(--✨bg--ghost-pressed))
          var(--🌀button-state--active, var(--✨bg--active))
          var(--🌀button-state--disabled, var(--✨bg--ghost-disabled));
      }

      &:where([data-kiwi-tone="accent"]) {
        --🥝button-background-color: var(
            --🌀button-state--default,
            var(--✨bg--ghost-accent-default)
          )
          var(--🌀button-state--hover, var(--✨bg--ghost-accent-hover))
          var(--🌀button-state--pressed, var(--✨bg--ghost-accent-pressed))
          var(--🌀button-state--active, var(--✨bg--active))
          var(--🌀button-state--disabled, var(--✨bg--ghost-accent-disabled));
        --🥝button-color: var(
            --🌀button-state--default,
            var(--✨color--ghost-accent-default)
          )
          var(--🌀button-state--hover, var(--✨color--ghost-accent-hover))
          var(--🌀button-state--pressed, var(--✨color--ghost-accent-pressed));
        --🥝icon-color: var(
            --🌀button-state--default,
            var(--✨icon--ghost-accent-default)
          )
          var(--🌀button-state--hover, var(--✨icon--ghost-accent-hover))
          var(--🌀button-state--pressed, var(--✨icon--ghost-accent-pressed));
      }
    }
  }

  @layer states {
    @media (any-hover: hover) {
      &:where(:hover) {
        --🌀button-state: var(--🌀button-state--hover);
      }
    }

    /* Reuse hover state when an associated popover is open. */
    &:where([data-has-popover-open]) {
      --🌀button-state: var(--🌀button-state--hover);
    }

    &:where(:active) {
      --🌀button-state: var(--🌀button-state--pressed);
    }

    &:where([aria-pressed="true"]) {
      --🌀button-state: var(--🌀button-state--active);
      --🥝button-border-color: var(--✨border--active);

      @media (forced-colors: active) {
        background-color: SelectedItem;
        color: SelectedItemText;
      }
    }

    &:where(:disabled, [aria-disabled="true"]) {
      --🌀button-state: var(--🌀button-state--disabled);
      color: var(--stratakit-color-text-neutral-disabled);
      cursor: not-allowed;
      -webkit-tap-highlight-color: transparent;
      --🥝icon-color: var(--stratakit-color-icon-neutral-disabled);

      @media (forced-colors: active) {
        border-color: GrayText;
        color: GrayText;
      }
    }
  }

  @layer base.🌀 {
    /* Cyclic toggles for default/hover/pressed/active/disabled states. See https://kizu.dev/cyclic-toggles/ */
    --🌀button-state: var(--🌀button-state--default);
    --🌀button-state--default: var(--🌀button-state,);
    --🌀button-state--hover: var(--🌀button-state,);
    --🌀button-state--pressed: var(--🌀button-state,);
    --🌀button-state--active: var(--🌀button-state,);
    --🌀button-state--disabled: var(--🌀button-state,);
  }
}

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
.🥝-checkbox {
  --✨size: 1rem;

  --✨shadow-border: 0px 0px 0px 1px var(--🥝checkbox-border-color) inset;

  --✨glow--bg-hover: var(--stratakit-color-glow-hue)
    var(--stratakit-color-bg-glow-base-hover-\%);
  --✨glow--bg-press: var(--stratakit-color-glow-hue)
    var(--stratakit-color-bg-glow-base-pressed-\%);

  --✨bg--default: var(--stratakit-color-bg-neutral-base);
  --✨bg--hover: color-mix(
    in oklch,
    var(--✨bg--default) 100%,
    var(--✨glow--bg-hover)
  );
  --✨bg--checked: var(--stratakit-color-bg-accent-base);
  --✨bg--checked-hover: color-mix(
    in oklch,
    var(--✨bg--checked) 100%,
    var(--✨glow--bg-press)
  );
  --✨bg--disabled: var(--stratakit-color-bg-glow-on-surface-disabled);

  --✨border--default: var(--stratakit-color-border-shadow-base);
  --✨border--hover: color-mix(
    in oklch,
    var(--✨border--default) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-border-glow-base-hover-\%)
  );
  --✨border--checked: var(--stratakit-color-border-shadow-strong);
  --✨border--checked-hover: color-mix(
    in oklch,
    var(--✨border--checked) 100%,
    var(--stratakit-color-glow-hue)
      var(--stratakit-color-border-glow-base-pressed-\%)
  );
  --✨border--disabled: transparent;

  @layer base {
    --🥝checkbox-color-svg: var(--stratakit-color-icon-neutral-emphasis);
    --🥝checkbox-border-radius: 4px;

    --🥝checkbox-unchecked-svg: url('data:image/svg+xml;utf8,<svg viewBox="0 0 16 16"></svg>');
    --🥝checkbox-checkmark-svg: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M11.2 5.6 6.8 10l-2-2"/></svg>');
    --🥝checkbox-indeterminate-svg: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 8h6.5"/></svg>');

    appearance: none;
    inline-size: var(--✨size);
    block-size: var(--✨size);
    cursor: pointer;

    background-color: var(
        --🌀checkbox-visual-state--default,
        var(--✨bg--default)
      )
      var(--🌀checkbox-visual-state--hover, var(--✨bg--hover))
      var(--🌀checkbox-visual-state--checked, var(--✨bg--checked))
      var(--🌀checkbox-visual-state--checked-hover, var(--✨bg--checked-hover))
      var(--🌀checkbox-visual-state--disabled, var(--✨bg--disabled));
    border-radius: var(--🥝checkbox-border-radius);
    color: var(--🌀checkbox-aria-state--unchecked, transparent)
      var(--🌀checkbox-aria-state--checked, var(--🥝checkbox-color-svg))
      var(--🌀checkbox-aria-state--indeterminate, var(--🥝checkbox-color-svg));
    transition: all 150ms ease-out;
    transition-property:
      background-color, border-color, box-shadow, --🥝checkbox-border-color;
    position: relative;
    box-shadow:
      var(--stratakit-shadow-button-base-inset), var(--✨shadow-border),
      var(--stratakit-shadow-button-base-drop);
    -webkit-tap-highlight-color: var(
      --stratakit-color-bg-glow-on-surface-accent-pressed
    );

    --🥝checkbox-border-color: var(
        --🌀checkbox-visual-state--default,
        var(--✨border--default)
      )
      var(--🌀checkbox-visual-state--hover, var(--✨border--hover))
      var(--🌀checkbox-visual-state--checked, var(--✨border--checked))
      var(
        --🌀checkbox-visual-state--checked-hover,
        var(--✨border--checked-hover)
      )
      var(--🌀checkbox-visual-state--disabled, var(--✨border--disabled));
    --🥝checkbox-mask-image: var(
        --🌀checkbox-aria-state--unchecked,
        var(--🥝checkbox-unchecked-svg)
      )
      var(--🌀checkbox-aria-state--checked, var(--🥝checkbox-checkmark-svg))
      var(
        --🌀checkbox-aria-state--indeterminate,
        var(--🥝checkbox-indeterminate-svg)
      );

    &::before,
    &::after {
      content: "";
      position: absolute;
      inset: 0px;
    }

    /* This pseudo-element increases tap target size to 24x24 */
    &::before {
      inset: calc((var(--✨size) - 24px) / 2);
    }

    /* This pseudo-element adds the actual checkmark SVG via --🥝checkbox-mask-image */
    &::after {
      background-color: currentColor;
      mask-image: var(--🥝checkbox-mask-image, initial);
      mask-repeat: no-repeat;
      mask-position: center;
    }
  }

  @layer states {
    @media (any-hover: hover) {
      &:where(:hover) {
        --🌀checkbox-visual-state: var(--🌀checkbox-visual-state--hover);
      }
    }

    &:where(:checked, [aria-checked="true"]) {
      --🌀checkbox-visual-state: var(--🌀checkbox-visual-state--checked);
      --🌀checkbox-aria-state: var(--🌀checkbox-aria-state--checked);

      @media (any-hover: hover) {
        &:where(:hover) {
          --🌀checkbox-visual-state: var(
            --🌀checkbox-visual-state--checked-hover
          );
        }
      }
    }

    &:where(:indeterminate, [aria-checked="mixed"]) {
      --🌀checkbox-visual-state: var(--🌀checkbox-visual-state--checked);
      --🌀checkbox-aria-state: var(--🌀checkbox-aria-state--indeterminate);
    }

    &:where(:disabled, [aria-disabled="true"]) {
      --🌀checkbox-visual-state: var(--🌀checkbox-visual-state--disabled);
      --🥝checkbox-color-svg: var(--stratakit-color-icon-neutral-disabled);
      cursor: not-allowed;
      box-shadow: none;
      -webkit-tap-highlight-color: transparent;
    }
  }

  @layer base.🌀 {
    /* Cyclic toggles for default/hover/checked/checked+hover/disabled states. See https://kizu.dev/cyclic-toggles/ */
    --🌀checkbox-visual-state: var(--🌀checkbox-visual-state--default);
    --🌀checkbox-visual-state--default: var(--🌀checkbox-visual-state,);
    --🌀checkbox-visual-state--hover: var(--🌀checkbox-visual-state,);
    --🌀checkbox-visual-state--checked: var(--🌀checkbox-visual-state,);
    --🌀checkbox-visual-state--checked-hover: var(--🌀checkbox-visual-state,);
    --🌀checkbox-visual-state--disabled: var(--🌀checkbox-visual-state,);

    /* Cyclic toggles for unchecked/checked/indeterminate states. */
    --🌀checkbox-aria-state: var(--🌀checkbox-aria-state--unchecked);
    --🌀checkbox-aria-state--unchecked: var(--🌀checkbox-aria-state,);
    --🌀checkbox-aria-state--checked: var(--🌀checkbox-aria-state,);
    --🌀checkbox-aria-state--indeterminate: var(--🌀checkbox-aria-state,);
  }
}

@media (forced-colors: active) {
  .🥝-checkbox {
    border: 1px solid CanvasText;

    &:where(
      :checked,
      [type="checkbox"]:indeterminate,
      [aria-checked="true"],
      [aria-checked="mixed"]
    ) {
      background-color: SelectedItem;

      &::after {
        background-color: SelectedItemText;
      }
    }

    &:where(:disabled, [aria-disabled="true"]) {
      background-color: Canvas;
      border-color: GrayText;

      &::after {
        background-color: GrayText;
      }
    }
  }
}

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
.🥝-field {
  --✨layout-inline-label-first: [label-start] auto [label-end control-start]
    auto [control-end];
  --✨layout-inline-control-first: [control-start] auto [control-end
    label-start] auto [label-end];
  --✨layout-stacked: [label-start control-start] auto [label-end control-end];

  @layer base {
    display: grid;
    gap: 4px; /* space/x1 */
    align-items: center;
    justify-content: start;

    /* Default layout */
    grid-template-columns: var(--✨layout-inline-label-first);

    /* By default align the descriptions with the label */
    --🥝field-description-column: label-start / label-end;

    /* With checkable fields, when the label is not first, switch to control-first layout */
    &:where(
      [data-kiwi-control-type="checkable"][data-kiwi-label-placement="after"]
    ) {
      grid-template-columns: var(--✨layout-inline-control-first);
    }

    &:where([data-kiwi-control-type="textlike"]) {
      /* Descriptions should be aligned with the control for text and combobox controls */
      --🥝field-description-column: control-start / control-end;

      /* Align labels with the control text (when inline) */
      align-items: baseline;

      /* Default to stacked layout unless inline has been specified */
      &:where(:not([data-kiwi-layout="inline"])) {
        grid-template-columns: var(--✨layout-stacked);
      }
    }

    :where(.🥝-description) {
      grid-column: var(--🥝field-description-column);
    }
  }
}

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
.🥝-label {
  @layer base {
    color: var(--stratakit-color-text-neutral-secondary);
    cursor: default;
    font-size: var(--stratakit-font-size-12);

    &:is(label) {
      cursor: pointer;
      -webkit-tap-highlight-color: var(
        --stratakit-color-bg-glow-on-surface-neutral-pressed
      );
    }
  }

  @layer states {
    &:has(+ :where(:disabled, [aria-disabled="true"])) {
      color: var(--stratakit-color-text-neutral-disabled);

      &:is(label) {
        cursor: not-allowed;
        -webkit-tap-highlight-color: transparent;
      }
    }
  }
}

/*---------------------------------------------------------------------------------------------
 * Copyright (c) Bentley Systems, Incorporated. All rights reserved.
 * See LICENSE.md in the project root for license terms and full copyright notice.
 *--------------------------------------------------------------------------------------------*/
.🥝-select-root {
  @layer base {
    &:where(:has(select.🥝-select), [data-kiwi-has-select="true"]) {
      display: inline-grid;
      align-items: center;
      isolation: isolate;

      > * {
        grid-area: 1 / 1 / -1 / -1;
      }
    }
  }
}

.🥝-select:is(.🥝-button) {
  --✨padding-inline-start: 8px;
  --✨padding-inline-end: calc(
    4px + 16px + 4px
  ); /* (gap) + (arrow size) + (padding-inline - disclosure arrow offset) */

  @layer base {
    min-inline-size: calc(
      var(--✨padding-inline-start) + 1ch + var(--✨padding-inline-end)
    );
    text-overflow: ellipsis;

    &:where(select:not([multiple])) {
      appearance: none;
      --🥝button-padding-inline: var(--✨padding-inline-start)
        var(--✨padding-inline-end);
      --🥝ghost-inline-offset: var(--✨padding-inline-start);

      > option {
        background-color: var(--stratakit-color-bg-neutral-base);
      }
    }
  }
}

.🥝-select-arrow:is(.🥝-disclosure-arrow) {
  @layer base {
    justify-self: end;
    margin-inline-end: 4px; /* (padding - disclosure offset) */
    pointer-events: none;
    z-index: 1; /* should be above the button */

    --🥝icon-color: var(
        --🌀select-arrow-state--default,
        var(--stratakit-color-icon-neutral-base)
      )
      var(
        --🌀select-arrow-state--hover,
        var(--stratakit-color-icon-neutral-hover)
      )
      var(
        --🌀select-arrow-state--disabled,
        var(--stratakit-color-icon-neutral-disabled)
      );
  }

  @layer states {
    @media (any-hover: hover) {
      :where(.🥝-select:hover) + & {
        --🌀select-arrow-state: var(--🌀select-arrow-state--hover);
      }
    }

    :where(.🥝-select:disabled) + & {
      --🌀select-arrow-state: var(--🌀select-arrow-state--disabled);
    }
  }

  @layer base.🌀 {
    --🌀select-arrow-state: var(--🌀select-arrow-state--default);
    --🌀select-arrow-state--default: var(--🌀select-arrow-state,);
    --🌀select-arrow-state--hover: var(--🌀select-arrow-state,);
    --🌀select-arrow-state--disabled: var(--🌀select-arrow-state,);
  }
}
